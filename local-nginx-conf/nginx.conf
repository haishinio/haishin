proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

upstream haishin_fe_upstream {
  server frontend:3000;
}

upstream haishin_be_rtmp_client_upstream {
  server backend:8000;
}

upstream haishin_be_upstream {
  server backend:8080;
}

server {
  listen 80;
  listen [::]:80;

  server_name haishin.uchuu.io;

  client_max_body_size 10000M;

  location /_next/static {
    proxy_cache STATIC;
    proxy_pass http://haishin_fe_upstream;

    # For testing cache - remove before deploying to production
    add_header X-Cache-Status $upstream_cache_status;
  }

  location /public {
    proxy_cache STATIC;
    proxy_ignore_headers Cache-Control;
    proxy_cache_valid 60m;
    proxy_pass http://haishin_fe_upstream;

    # For testing cache - remove before deploying to production
    add_header X-Cache-Status $upstream_cache_status;
  }

  location /api {
    # Probably need to make it so it can stay alive for a while
    proxy_read_timeout 300s;
    proxy_send_timeout 300s;
    proxy_connect_timeout 300s;
    proxy_set_header Connection "";

    proxy_pass http://haishin_fe_upstream;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
  }

  location /socket.io {
    proxy_pass http://haishin_be_upstream;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

  location /rtmp/ {
    proxy_pass http://haishin_be_rtmp_client_upstream/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

  location / {
    try_files $uri @nodejs;
  }

  location @nodejs {
    proxy_pass http://haishin_fe_upstream;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src * 'self' blob: data: mediastream: filesystem: 'unsafe-eval' 'unsafe-inline'" always;
  }
}